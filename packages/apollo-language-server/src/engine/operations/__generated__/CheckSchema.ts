/* tslint:disable */
/* eslint-disable */
// This file was automatically generated and should not be edited.

import {
  IntrospectionSchemaInput,
  GitContextInput,
  HistoricQueryParameters,
  ChangeSeverity
} from "./../../../../../../__generated__/globalTypes";

// ====================================================
// GraphQL mutation operation: CheckSchema
// ====================================================

export interface CheckSchema_service_checkSchema_diffToPrevious_affectedClients {
  __typename: "AffectedClient";
}

export interface CheckSchema_service_checkSchema_diffToPrevious_affectedQueries {
  __typename: "AffectedQuery";
}

export interface CheckSchema_service_checkSchema_diffToPrevious_changes {
  __typename: "Change";
  /**
   * Indication of the success of the overall change, either failure, warning, or notice.
   */
  severity: ChangeSeverity;
  /**
   * Indication of the kind of target and action of the change, e.g. 'TYPE_REMOVED'.
   */
  code: string;
  /**
   * Explanation of both the target of the change and how it was changed.
   */
  description: string;
}

export interface CheckSchema_service_checkSchema_diffToPrevious_validationConfig {
  __typename: "SchemaDiffValidationConfig";
  /**
   * delta in seconds from current time that determines the start of the window
   * for reported metrics included in a schema diff. A day window from the present
   * day would have a \`from\` value of -86400. In rare cases, this could be an ISO
   * timestamp if the user passed one in on diff creation
   */
  from: any | null;
  /**
   * delta in seconds from current time that determines the end of the
   * window for reported metrics included in a schema diff. A day window
   * from the present day would have a \`to\` value of -0. In rare
   * cases, this could be an ISO timestamp if the user passed one in on diff
   * creation
   */
  to: any | null;
  /**
   * Minimum number of requests within the window for a query to be considered.
   */
  queryCountThreshold: number | null;
  /**
   * Number of requests within the window for a query to be considered, relative to
   * total request count. Expected values are between 0 and 0.05 (minimum 5% of
   * total request volume)
   */
  queryCountThresholdPercentage: number | null;
}

export interface CheckSchema_service_checkSchema_diffToPrevious {
  __typename: "SchemaDiff";
  /**
   * Indication of the success of the change, either failure, warning, or notice.
   */
  severity: ChangeSeverity;
  /**
   * Clients affected by all changes in diff
   */
  affectedClients:
    | CheckSchema_service_checkSchema_diffToPrevious_affectedClients[]
    | null;
  /**
   * Operations affected by all changes in diff
   */
  affectedQueries:
    | CheckSchema_service_checkSchema_diffToPrevious_affectedQueries[]
    | null;
  /**
   * Number of operations that were validated during schema diff
   */
  numberOfCheckedOperations: number | null;
  /**
   * List of schema changes with associated affected clients and operations
   */
  changes: CheckSchema_service_checkSchema_diffToPrevious_changes[];
  /**
   * Configuration of validation
   */
  validationConfig: CheckSchema_service_checkSchema_diffToPrevious_validationConfig | null;
}

export interface CheckSchema_service_checkSchema {
  __typename: "CheckSchemaResult";
  /**
   * Generated url to view schema diff in Engine
   */
  targetUrl: string | null;
  /**
   * Schema diff and affected operations generated by the schema check
   */
  diffToPrevious: CheckSchema_service_checkSchema_diffToPrevious;
}

export interface CheckSchema_service {
  __typename: "ServiceMutation";
  /**
   * Checks a proposed schema against the schema that has been published to
   * a particular tag, using metrics that have been published to the base tag.
   * Callers can set the historicParameters directly, which will be used if
   * provided. If useMaximumRetention is provided, but historicParameters is not,
   * then validation will use the maximum retention the graph has access to.
   * If neither historicParameters nor useMaximumRetention is provided, the
   * default time range of one week (7 days) will be used.
   */
  checkSchema: CheckSchema_service_checkSchema;
}

export interface CheckSchema {
  service: CheckSchema_service | null;
}

export interface CheckSchemaVariables {
  id: string;
  schema?: IntrospectionSchemaInput | null;
  schemaHash?: string | null;
  tag?: string | null;
  gitContext?: GitContextInput | null;
  historicParameters?: HistoricQueryParameters | null;
  frontend?: string | null;
}
